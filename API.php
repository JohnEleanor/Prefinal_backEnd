<?php 

// р╣Бр╕Бр╣Йр╕Ыр╕▒р╕Нр╕лр╕▓р╕Бр╕▓р╕гр╕Хр╕┤р╕Ф CORS р╕Бр╕гр╕Ур╕╡р╕вр╕┤р╕Зр╕Ир╕▓р╕Бр╕ар╕▓р╕вр╕Щр╕нр╕Б
header("Access-Control-Allow-Origin: *");
// р╕нр╕Щр╕╕р╕Нр╕▓р╕Хр╕┤ Method
header("Access-Control-Allow-Methods: GET, POST, PUT, DELETE, OPTIONS");
header("Access-Control-Allow-Headers: Content-Type, Authorization");
header("Access-Control-Allow-Credentials: true");
header("Content-Type: application/json");

require_once 'config/db.php';
require_once 'controller/Postman.php';
require_once 'controller/User.php';


$method = $_SERVER["REQUEST_METHOD"];
$endpoint = $_SERVER["PATH_INFO"];

// р╕Бр╕▓р╕гр╣Ар╕Вр╣Йр╕▓р╕Цр╕╢р╕Зр╕Вр╣Йр╕нр╕бр╕╣р╕е р╕Вр╕нр╕З URL р╕Чр╕╡р╣Ир╕кр╣Ир╕Зр╕бр╕▓р╣Ар╣Ар╕Ър╕Ър╣Др╕бр╣Ир╕Хр╣Йр╕нр╕З Regex ЁЯШВ
$decode_uri = [];
$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);
$uri = explode( '/', $uri );
foreach ($uri as $value ) { // р╕нр╣Ир╕▓р╕Щр╕Др╣Ир╕▓ UTF 8 р╣Гр╕лр╣Йр╣Ар╕Ыр╣Зр╕Щр╕ар╕▓р╕йр╕▓р╣Др╕Чр╕в
    $value = urldecode($value);
    $decode_uri[] = $value;
}


$postmanObj = new Postman($conn);
$userObj = new User($conn);

if ($method == "GET") {
  
    // р╕кр╣Ир╕зр╕Щр╕Вр╕нр╕З province
    if (isset($decode_uri[3]) && $decode_uri[3] == "province") {
        if (isset($decode_uri[4])) {
            $result = $postmanObj->showsubdistrict($decode_uri[4]);
            print(json_encode($result));
        }else {
            $result = $postmanObj->listProvince();
            print(json_encode($result));
        }
    }

    // р╕кр╣Ир╕зр╕Щр╕Вр╕нр╕З user
    if (isset($decode_uri[3]) && $decode_uri[3] == "user") {

        if (isset($decode_uri[4])) {
            $result = $userObj->getUserByid($decode_uri[4]);
            print(json_encode($result));
        } else {
            $result = $userObj->getAlluser();
            print(json_encode($result));
        }
    }

    
}
elseif ($method == "POST") {

    // р╕кр╣Ир╕зр╕Щр╕Вр╕нр╕З user
    if ( (isset($decode_uri[3])) && ($decode_uri[3] == "user") ) {

        if ($decode_uri[4] == "register") {
            $data = json_decode(file_get_contents("php://input"), true);
            $username = $data["username"];
            $password = $data["password"];
            $email = $data["email"];
    
            $result = $userObj->register($username, $password, $email);
            print(json_encode($result));
        }elseif ($decode_uri[4] == "login") {
            $data = json_decode(file_get_contents("php://input"), true);
            $username = $data["username"];
            $password = $data["password"];
    
            $result = $userObj->login($username, $password);
            print(json_encode($result));
        }
    }


}elseif ($method == "PUT") {

        // р╕кр╣Ир╕зр╕Щр╕Вр╕нр╕З user
    if (isset($decode_uri[3]) && $decode_uri[3] == "user" ) {
        $data = json_decode(file_get_contents("php://input"), true);
        $id = $decode_uri[4];
        $result = $userObj->updateUser($data, $id);
        print(json_encode($result));
    } else {
        echo "Not Found";
    }
}elseif ($method == "DELETE") {
        // р╕кр╣Ир╕зр╕Щр╕Вр╕нр╕З user
    if (isset($decode_uri[3]) && $decode_uri[3] == "user") {
        $data = json_decode(file_get_contents("php://input"), true);

        $id = $data["id"];
        $result = $userObj->deleteUser($id);
        print(json_encode($result));
    } else {
        echo "Not Found";
    }
}



?>